{
    "folders": [
        { "path": ".." }
    ],
    "settings": {
        "files.exclude": {
            "target": true
        },

        "cortex-debug": {
            // Binary names match the install instructions here:
            // https://github.com/ut-utp/.github/wiki/Dev-Environment-Setup#embedded-development-setup

            "gdbPath": {
                "windows": "gdb-multiarch.exe",
                "osx": "gdb",             // `brew` does not offer a `gdb-multiarch`
                "linux": "gdb-multiarch", // for Ubuntu and friends; flake.nix matches this
            },
            "openocdPath": {
                "windows": "openocd.exe",
                "osx": "openocd",
                "linux": "openocd",
            },
            "objdumpPath": {
                "windows": "llvm-objdump.exe",
                "osx": "llvm-objdump",
                "linux": "llvm-objdump",
            },
            // We want to use `llvm-nm`; this will be searched for "alongside" `objdump`.
            "armToolchainPrefix": "llvm",

            "showRTOS": false,
        },
    },
    "extensions": {
        "recommendations": [
            // Rust:
            "rust-lang.rust-analyzer",
			"bungcip.better-toml",
            "serayuzgur.crates",
			// Misc:
            "eamodio.gitlens",
            // Embedded things:
            "marus25.cortex-debug",
            // Nix:
            "jnoortheen.nix-ide",
            "mkhl.direnv"
        ]
    }
}

// TODO: openocd.exe on windows in .gdbconfig, `gdb-multiarch` on linux, etc. for Cargo
// TODO: test the gdb-multiarch nix wrapper on linux
// TODO: find a way to continue on exit in GDB?
// TODO: clean up launch.json (move to workspace)
// TODO: check that the vscode debug problems are fixed...
// TODO: lmtools binaries, etc.
