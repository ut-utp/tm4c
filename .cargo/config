[target.'cfg(all(target_arch = "arm", target_os = "none"))']
runner = "cargo run -q --bin xtask --"

rustflags = [
  "-C", "link-arg=-Tlink.x",
#  "-C", "linker=flip-link", # TODO
#  "-C", "force-frame-pointers=yes",
]


# Really what we want is `default-target` (an unstable Cargo feature:
# https://doc.rust-lang.org/cargo/reference/unstable.html#per-package-target)
# so that we can have the `xtask` package be built for the host and the
# `utp-tm4c` package built for ARM.
#
# But, it doesn't look like the feature above is headed towards stabilization
# anytime soon and we don't want to tie ourselves to nightly so we stick with
# this and use aliases where possible to specify the target triple.
#
# See: https://github.com/ut-utp/tm4c/issues/6 for more details.
[build]
# target = "thumbv7em-none-eabihf" # Cortex-M4F and Cortex-M7F (with FPU)

[alias]
r = "run --release --target thumbv7em-none-eabihf"
b = "build --release --target thumbv7em-none-eabihf"
ben = "bench --target thumbv7em-none-eabihf"

# Notes:
# call stack: cargo +nightly call-stack  --bin utp-tm4c | dot -Tpng > out.png
# cargo +nightly -Z build-std=core run
# (^ with force-frame-pointers=yes)
# cargo +nightly stack-sizes --bin utp-tm4c --release
